#Resolve headers, refs and linkage
find_path(OPENAL_LOCATION AL/al.h)
if (OPENAL_LOCATION)
    target_include_directories(tomahawk PRIVATE ${OPENAL_LOCATION})
    find_package(OpenAL CONFIG QUIET)
    if (NOT OpenAL_FOUND)
        find_library(OpenAL_FOUND "openal")
        if (OpenAL_FOUND)
            set(OPENAL_LIBRARIES "${OpenAL_FOUND}")
            target_compile_definitions(tomahawk PRIVATE -DTHAWK_HAS_OPENAL)
        endif()
    else()
        target_compile_definitions(tomahawk PRIVATE -DTHAWK_HAS_OPENAL)
    endif()
    if (OpenAL_FOUND OR OPENAL_LIBRARIES)
        if (DEFINED OPENAL_LIBRARIES)
            string(STRIP "${OPENAL_LIBRARIES}" OPENAL_LIBRARIES)
            target_link_libraries(tomahawk PRIVATE ${OPENAL_LIBRARIES})
            message(STATUS "OpenAL library found")
        else()
            target_link_libraries(tomahawk PRIVATE OpenAL::OpenAL)
            message(STATUS "OpenAL target library found")
        endif()
    else()
        message(WARNING "OpenAL library was not found")
    endif()
else()
    message(WARNING "OpenAL library was not found")
endif()

#Cleanup
unset(OPENAL_LOCATION CACHE)
unset(OpenAL_FOUND CACHE)
unset(OPENAL_LIBRARIES CACHE)