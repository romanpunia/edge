[1mdiff --git a/src/mavi/audio/effects.cpp b/src/mavi/audio/effects.cpp[m
[1mindex c037700..d15356e 100644[m
[1m--- a/src/mavi/audio/effects.cpp[m
[1m+++ b/src/mavi/audio/effects.cpp[m
[36m@@ -193,7 +193,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Reverb::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
[36m@@ -224,7 +224,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Reverb::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 [m
[36m@@ -309,7 +309,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Chorus::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
[36m@@ -323,7 +323,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Chorus::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 [m
[36m@@ -373,7 +373,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Distortion::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
[36m@@ -386,7 +386,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Distortion::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 [m
[36m@@ -434,7 +434,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Echo::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
[36m@@ -447,7 +447,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Echo::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 [m
[36m@@ -496,7 +496,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Flanger::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
[36m@@ -510,7 +510,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Flanger::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 [m
[36m@@ -558,7 +558,7 @@[m [mnamespace Mavi[m
 			}[m
 			void FrequencyShifter::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
[36m@@ -569,7 +569,7 @@[m [mnamespace Mavi[m
 			}[m
 			void FrequencyShifter::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 [m
[36m@@ -614,7 +614,7 @@[m [mnamespace Mavi[m
 			}[m
 			void VocalMorpher::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
[36m@@ -628,7 +628,7 @@[m [mnamespace Mavi[m
 			}[m
 			void VocalMorpher::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 [m
[36m@@ -675,7 +675,7 @@[m [mnamespace Mavi[m
 			}[m
 			void PitchShifter::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
[36m@@ -685,7 +685,7 @@[m [mnamespace Mavi[m
 			}[m
 			void PitchShifter::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 [m
[36m@@ -725,7 +725,7 @@[m [mnamespace Mavi[m
 			}[m
 			void RingModulator::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
[36m@@ -736,7 +736,7 @@[m [mnamespace Mavi[m
 			}[m
 			void RingModulator::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 [m
[36m@@ -779,7 +779,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Autowah::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
[36m@@ -791,7 +791,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Autowah::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 [m
[36m@@ -830,14 +830,14 @@[m [mnamespace Mavi[m
 			}[m
 			void Compressor::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
 			}[m
 			void Compressor::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 			}[m
[36m@@ -876,7 +876,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Equalizer::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				AudioFilter* NewFilter = GetFilterDeserialized(Node);[m
 				if (NewFilter != nullptr)[m
 					SetFilter(&Filter);[m
[36m@@ -894,7 +894,7 @@[m [mnamespace Mavi[m
 			}[m
 			void Equalizer::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				if (Filter != nullptr)[m
 					Filter->Serialize(Node->Set("filter"));[m
 [m
[1mdiff --git a/src/mavi/audio/filters.cpp b/src/mavi/audio/filters.cpp[m
[1mindex 3ba37da..26b797b 100644[m
[1m--- a/src/mavi/audio/filters.cpp[m
[1m+++ b/src/mavi/audio/filters.cpp[m
[36m@@ -117,13 +117,13 @@[m [mnamespace Mavi[m
 			}[m
 			void Lowpass::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				Engine::Series::Unpack(Node->Find("gain"), &Gain);[m
 				Engine::Series::Unpack(Node->Find("gain-hf"), &GainHF);[m
 			}[m
 			void Lowpass::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				Engine::Series::Pack(Node->Set("gain"), Gain);[m
 				Engine::Series::Pack(Node->Set("gain-hf"), GainHF);[m
 			}[m
[36m@@ -158,13 +158,13 @@[m [mnamespace Mavi[m
 			}[m
 			void Highpass::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				Engine::Series::Unpack(Node->Find("gain"), &Gain);[m
 				Engine::Series::Unpack(Node->Find("gain-lf"), &GainLF);[m
 			}[m
 			void Highpass::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				Engine::Series::Pack(Node->Set("gain"), Gain);[m
 				Engine::Series::Pack(Node->Set("gain-lf"), GainLF);[m
 			}[m
[36m@@ -200,14 +200,14 @@[m [mnamespace Mavi[m
 			}[m
 			void Bandpass::Deserialize(Core::Schema* Node)[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				Engine::Series::Unpack(Node->Find("gain"), &Gain);[m
 				Engine::Series::Unpack(Node->Find("gain-lf"), &GainLF);[m
 				Engine::Series::Unpack(Node->Find("gain-hf"), &GainHF);[m
 			}[m
 			void Bandpass::Serialize(Core::Schema* Node) const[m
 			{[m
[31m-				VI_ASSERT_V(Node != nullptr, "schema should be set");[m
[32m+[m				[32mVI_ASSERT(Node != nullptr, "schema should be set");[m
 				Engine::Series::Pack(Node->Set("gain"), Gain);[m
 				Engine::Series::Pack(Node->Set("gain-lf"), GainLF);[m
 				Engine::Series::Pack(Node->Set("gain-hf"), GainHF);[m
[1mdiff --git a/src/mavi/config.hpp b/src/mavi/config.hpp[m
[1mindex 11e62e6..b785a40 100644[m
[1m--- a/src/mavi/config.hpp[m
[1m+++ b/src/mavi/config.hpp[m
[36m@@ -107,32 +107,31 @@[m [mtypedef socklen_t socket_size_t;[m
 #endif[m
 #ifdef NDEBUG[m
 #if VI_DLEVEL >= 5[m
[31m-#define VI_TRACE(Format, ...) Mavi::Core::OS::Log((int)Mavi::Core::LogLevel::Trace, 0, nullptr, Format, ##__VA_ARGS__)[m
[32m+[m[32m#define VI_TRACE(Format, ...) Mavi::Core::ErrorHandling::Message(Mavi::Core::LogLevel::Trace, 0, nullptr, Format, ##__VA_ARGS__)[m[41m[m
 #else[m
 #define VI_TRACE(Format, ...) ((void)0)[m
 #endif[m
 #if VI_DLEVEL >= 4[m
[31m-#define VI_DEBUG(Format, ...) Mavi::Core::OS::Log((int)Mavi::Core::LogLevel::Debug, 0, nullptr, Format, ##__VA_ARGS__)[m
[32m+[m[32m#define VI_DEBUG(Format, ...) Mavi::Core::ErrorHandling::Message(Mavi::Core::LogLevel::Debug, 0, nullptr, Format, ##__VA_ARGS__)[m[41m[m
 #else[m
 #define VI_DEBUG(Format, ...) ((void)0)[m
 #endif[m
 #if VI_DLEVEL >= 3[m
[31m-#define VI_INFO(Format, ...) Mavi::Core::OS::Log((int)Mavi::Core::LogLevel::Info, 0, nullptr, Format, ##__VA_ARGS__)[m
[32m+[m[32m#define VI_INFO(Format, ...) Mavi::Core::ErrorHandling::Message(Mavi::Core::LogLevel::Info, 0, nullptr, Format, ##__VA_ARGS__)[m[41m[m
 #else[m
 #define VI_INFO(Format, ...) ((void)0)[m
 #endif[m
 #if VI_DLEVEL >= 2[m
[31m-#define VI_WARN(Format, ...) Mavi::Core::OS::Log((int)Mavi::Core::LogLevel::Warning, 0, nullptr, Format, ##__VA_ARGS__)[m
[32m+[m[32m#define VI_WARN(Format, ...) Mavi::Core::ErrorHandling::Message(Mavi::Core::LogLevel::Warning, 0, nullptr, Format, ##__VA_ARGS__)[m[41m[m
 #else[m
 #define VI_WARN(Format, ...) ((void)0)[m
 #endif[m
 #if VI_DLEVEL >= 1[m
[31m-#define VI_ERR(Format, ...) Mavi::Core::OS::Log((int)Mavi::Core::LogLevel::Error, 0, nullptr, Format, ##__VA_ARGS__)[m
[32m+[m[32m#define VI_ERR(Format, ...) Mavi::Core::ErrorHandling::Message(Mavi::Core::LogLevel::Error, 0, nullptr, Format, ##__VA_ARGS__)[m[41m[m
 #else[m
 #define VI_ERR(Format, ...) ((void)0)[m
 #endif[m
[31m-#define VI_ASSERT(Condition, Returnable, Format, ...) ((void)0)[m
[31m-#define VI_ASSERT_V(Condition, Format, ...) ((void)0)[m
[32m+[m[32m#define VI_ASSERT(Condition, Format, ...) ((void)0)[m[41m[m
 #define VI_MEASURE(Threshold) ((void)0)[m
 #define VI_MEASURE_LOOP() ((void)0)[m
 #define VI_WATCH(Ptr, Label) ((void)0)[m
[36m@@ -145,38 +144,35 @@[m [mtypedef socklen_t socket_size_t;[m
 #endif[m
 #else[m
 #if VI_DLEVEL >= 5[m
[31m-#define VI_TRACE(Format, ...) Mavi::Core::OS::Log((int)Mavi::Core::LogLevel::Trace, __LINE__, __FILE__, Format, ##__VA_ARGS__)[m
[32m+[m[32m#define VI_TRACE(Format, ...) Mavi::Core::ErrorHandling::Message(Mavi::Core::LogLevel::Trace, __LINE__, __FILE__, Format, ##__VA_ARGS__)[m[41m[m
 #else[m
 #define VI_TRACE(Format, ...) ((void)0)[m
 #endif[m
 #if VI_DLEVEL >= 4[m
[31m-#define VI_DEBUG(Format, ...) Mavi::Core::OS::Log((int)Mavi::Core::LogLevel::Debug, __LINE__, __FILE__, Format, ##__VA_ARGS__)[m
[32m+[m[32m#define VI_DEBUG(Format, ...) Mavi::Core::ErrorHandling::Message(Mavi::Core::LogLevel::Debug, __LINE__, __FILE__, Format, ##__VA_ARGS__)[m[41m[m
 #else[m
 #define VI_DEBUG(Format, ...) ((void)0)[m
 #endif[m
 #if VI_DLEVEL >= 3[m
[31m-#define VI_INFO(Format, ...) Mavi::Core::OS::Log((int)Mavi::Core::LogLevel::Info, __LINE__, __FILE__, Format, ##__VA_ARGS__)[m
[32m+[m[32m#define VI_INFO(Format, ...) Mavi::Core::ErrorHandling::Message(Mavi::Core::LogLevel::Info, __LINE__, __FILE__, Format, ##__VA_ARGS__)[m[41m[m
 #else[m
 #define VI_INFO(Format, ...) ((void)0)[m
 #endif[m
 #if VI_DLEVEL >= 2[m
[31m-#define VI_WARN(Format, ...) Mavi::Core::OS::Log((int)Mavi::Core::LogLevel::Warning, __LINE__, __FILE__, Format, ##__VA_ARGS__)[m
[32m+[m[32m#define VI_WARN(Format, ...) Mavi::Core::ErrorHandling::Message(Mavi::Core::LogLevel::Warning, __LINE__, __FILE__, Format, ##__VA_ARGS__)[m[41m[m
 #else[m
 #define VI_WARN(Format, ...) ((void)0)[m
 #endif[m
 #if VI_DLEVEL >= 1[m
[31m-#define VI_ERR(Format, ...) Mavi::Core::OS::Log((int)Mavi::Core::LogLevel::Error, __LINE__, __FILE__, Format, ##__VA_ARGS__)[m
[31m-#define VI_ASSERT(Condition, Returnable, Format, ...) if (!(Condition)) { Mavi::Core::OS::Assert(true, __LINE__, __FILE__, __func__, #Condition, Format, ##__VA_ARGS__); return Returnable; }[m
[31m-#define VI_ASSERT_V(Condition, Format, ...) if (!(Condition)) { Mavi::Core::OS::Assert(true, __LINE__, __FILE__, __func__, #Condition, Format, ##__VA_ARGS__); return; }[m
[32m+[m[32m#define VI_ERR(Format, ...) Mavi::Core::ErrorHandling::Message(Mavi::Core::LogLevel::Error, __LINE__, __FILE__, Format, ##__VA_ARGS__)[m[41m[m
 #else[m
 #define VI_ERR(Format, ...) ((void)0)