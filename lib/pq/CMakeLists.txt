#Resolve headers, refs and linkage
set(VI_POSTGRESQL ON CACHE BOOL "Enable PostgreSQL library")
if (VI_POSTGRESQL)
	find_path(POSTGRESQL_LOCATION libpq-fe.h PATH_SUFFIXES "libpq" PATHS "/usr/include/postgresql" "/usr/local/opt/libpq/include")
	if (POSTGRESQL_LOCATION)
		target_include_directories(mavi PRIVATE ${POSTGRESQL_LOCATION})
		find_package(PostgreSQL CONFIG QUIET)
		if (NOT PostgreSQL_FOUND)
			find_library(POSTGRESQL_LIBRARY NAMES "pq" "libpq" PATH_SUFFIXES "lib")
			if (POSTGRESQL_LIBRARY)
				set(PostgreSQL_LIBRARIES "${POSTGRESQL_LIBRARY}")
				target_compile_definitions(mavi PRIVATE -DVI_POSTGRESQL)
				unset(PostgreSQL_FOUND CACHE)
			endif()
		else()
			target_compile_definitions(mavi PRIVATE -DVI_POSTGRESQL)
		endif()
		if (PostgreSQL_FOUND OR PostgreSQL_LIBRARIES)
			if (DEFINED PostgreSQL_LIBRARIES)
				string(STRIP "${PostgreSQL_LIBRARIES}" PostgreSQL_LIBRARIES)
				target_link_libraries(mavi PRIVATE ${PostgreSQL_LIBRARIES})
				message(STATUS "PostgreSQL library found")
			else()
				target_link_libraries(mavi PRIVATE PostgreSQL::PostgreSQL)
				message(STATUS "PostgreSQL target library found")
			endif()
		else()
			message("PostgreSQL library was not found")
		endif()
	else()
		message("PostgreSQL library was not found")
	endif()
endif()

#Cleanup
unset(POSTGRESQL_LIBRARY CACHE)
unset(POSTGRESQL_LOCATION CACHE)
unset(PostgreSQL_FOUND CACHE)
unset(PostgreSQL_LIBRARIES CACHE)
unset(PostgreSQL_DIR CACHE)
unset(PostgreSQL_LIBRARY_DEBUG CACHE)