#Resolve headers, refs and linkage
find_path(OPENGL_LOCATION GL/gl.h OpenGL/OpenGL.h PATHS ${OPENGL_INCLUDE_DIR})
if (OPENGL_LOCATION)
    target_include_directories(tomahawk PRIVATE ${OPENGL_LOCATION})
    find_package(OpenGL QUIET)
    if (NOT OpenGL_FOUND)
        find_library(OpenGL_FOUND "OpenGL")
        if (OpenGL_FOUND)
            set(OPENGL_LIBRARIES "${OpenGL_FOUND}")
            target_compile_definitions(tomahawk PRIVATE -DTHAWK_HAS_OPENGL)
        endif()
    else()
        target_compile_definitions(tomahawk PRIVATE -DTHAWK_HAS_OPENGL)
    endif()
    if (OpenGL_FOUND OR OPENGL_LIBRARIES)
        if (DEFINED OPENGL_LIBRARIES)
            string(STRIP "${OPENGL_LIBRARIES}" OPENGL_LIBRARIES)
            target_link_libraries(tomahawk PRIVATE ${OPENGL_LIBRARIES})
            message(STATUS "OpenGL library found")
        else()
            target_link_libraries(tomahawk PRIVATE OpenGL::GL)
            message(STATUS "OpenGL target library found")
        endif()
    else()
        message(WARNING "OpenGL library was not found")
    endif()
else()
    message(WARNING "OpenGL library was not found")
endif()

#Cleanup
unset(OPENGL_LOCATION CACHE)
unset(OpenGL_FOUND CACHE)
unset(OPENGL_LIBRARIES CACHE)