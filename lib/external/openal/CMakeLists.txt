#Resolve headers, refs and linkage
set(TH_USE_OPENAL ON CACHE BOOL "Enable OpenAL library")
if (TH_USE_OPENAL)
	find_path(OPENAL_LOCATION AL/al.h)
	if (OPENAL_LOCATION)
		target_include_directories(tomahawk PRIVATE ${OPENAL_LOCATION})
		find_package(OpenAL CONFIG QUIET)
		if (NOT OpenAL_FOUND)
			find_library(TH_OPENAL_LIBRARY "openal")
			if (TH_OPENAL_LIBRARY)
				set(OPENAL_LIBRARIES "${TH_OPENAL_LIBRARY}")
				target_compile_definitions(tomahawk PRIVATE -DTH_HAS_OPENAL)
				unset(OpenAL_FOUND CACHE)
			endif()
		else()
			target_compile_definitions(tomahawk PRIVATE -DTH_HAS_OPENAL)
		endif()
		if (OpenAL_FOUND OR OPENAL_LIBRARIES)
			if (DEFINED OPENAL_LIBRARIES)
				string(STRIP "${OPENAL_LIBRARIES}" OPENAL_LIBRARIES)
				target_link_libraries(tomahawk PRIVATE ${OPENAL_LIBRARIES})
				message(STATUS "OpenAL library found")
			else()
				target_link_libraries(tomahawk PRIVATE OpenAL::OpenAL)
				message(STATUS "OpenAL target library found")
			endif()
		else()
			message(WARNING "OpenAL library was not found")
		endif()
	else()
		message(WARNING "OpenAL library was not found")
	endif()
endif()

#Cleanup
unset(TH_OPENAL_LIBRARY CACHE)
unset(OPENAL_LOCATION CACHE)
unset(OpenAL_FOUND CACHE)
unset(OPENAL_LIBRARIES CACHE)
unset(OpenAL_DIR CACHE)