#Resolve headers, refs and linkage
set(TH_USE_GLEW ON CACHE BOOL "Enable GLEW library")
if (TH_USE_GLEW)
	find_path(GLEW_LOCATION GL/glew.h)
	if (GLEW_LOCATION)
		target_include_directories(tomahawk PRIVATE ${GLEW_LOCATION})
		find_package(GLEW QUIET)
		if (NOT GLEW_FOUND)
			find_library(GLEW_FOUND "GLEW")
			if (GLEW_FOUND)
				set(GLEW_LIBRARIES "${GLEW_FOUND}")
				target_compile_definitions(tomahawk PRIVATE -DTH_HAS_GLEW)
			endif()
		else()
			target_compile_definitions(tomahawk PRIVATE -DTH_HAS_GLEW)
		endif()
		if (GLEW_FOUND OR GLEW_LIBRARIES)
			if (DEFINED GLEW_LIBRARIES)
				string(STRIP "${GLEW_LIBRARIES}" GLEW_LIBRARIES)
				target_link_libraries(tomahawk PRIVATE ${GLEW_LIBRARIES})
				message(STATUS "GLEW library found")
			else()
				target_link_libraries(tomahawk PRIVATE GLEW::GLEW)
				message(STATUS "GLEW target library found")
			endif()
		else()
			message(WARNING "GLEW library was not found")
		endif()
	else()
		message(WARNING "GLEW library was not found")
	endif()
endif()

#Cleanup
unset(GLEW_LOCATION CACHE)
unset(GLEW_FOUND CACHE)
unset(GLEW_LIBRARIES CACHE)
unset(GLEW_DIR CACHE)