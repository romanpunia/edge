#Set preferred OpenGL libraries
set(OpenGL_GL_PREFERENCE "GLVND")

#Resolve headers, refs and linkage
set(ED_USE_OPENGL ON CACHE BOOL "Enable OpenGL library")
if (ED_USE_OPENGL)
	find_path(OPENGL_LOCATION GL/gl.h OpenGL/OpenGL.h PATHS ${OPENGL_INCLUDE_DIR})
	if (OPENGL_LOCATION)
		target_include_directories(edge PRIVATE ${OPENGL_LOCATION})
		find_package(OpenGL QUIET)
		if (NOT OpenGL_FOUND)
			find_library(OpenGL_FOUND "OpenGL")
			if (OpenGL_FOUND)
				set(OPENGL_LIBRARIES "${OpenGL_FOUND}")
				target_compile_definitions(edge PRIVATE -DED_HAS_OPENGL)
			endif()
		else()
			target_compile_definitions(edge PRIVATE -DED_HAS_OPENGL)
		endif()
		if (OpenGL_FOUND OR OPENGL_LIBRARIES)
			if (DEFINED OPENGL_LIBRARIES)
				string(STRIP "${OPENGL_LIBRARIES}" OPENGL_LIBRARIES)
				target_link_libraries(edge PRIVATE ${OPENGL_LIBRARIES})
				message(STATUS "OpenGL library found")
			else()
				target_link_libraries(edge PRIVATE OpenGL::GL)
				message(STATUS "OpenGL target library found")
			endif()
		else()
			message("OpenGL library was not found")
		endif()
	else()
		message("OpenGL library was not found")
	endif()
endif()

#Cleanup
unset(OPENGL_LOCATION CACHE)
unset(OpenGL_FOUND CACHE)
unset(OPENGL_LIBRARIES CACHE)
unset(OpenGL_GL_PREFERENCE CACHE)